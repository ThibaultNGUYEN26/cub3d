
		111111111111111   1111111
		100000000011001   1000001
		1011000001110011111000001
		1001000000000000000000001
111111111011000001110000000000001
100000000011000001110111111111111
11110111111111011100000011111
   1000000000000000000001
11110111111111011101010011111
11000000110101011100000010001
10000000000000001100000010001
10000000000000001101010010001
11000001111101011111011110N0111
11110111   10101 101111010001
11111111   11111 111111111111

int i = 0, j = 0;

while (i < nb_lignes) :
	// if we are at the first line
	if (i == 0 || i == nb_lignes - 1) :
		j = 0;
		while (j < longest_line) :
			if (tab[i][j] != '1' && tab[i][j] != ' ') :
				return (0);
			j++;
	else :
		// passer les espaces
		while (j < longest_line && tab[i][j] == ' ')
			j++;
		if (j == longest_line)
			return (0);
		while (j < longest_line) :
			// check that the first is a 1
			if (tab[i][j] != '1')
				return (0);
			// if the past or future was a space and this one is not : it has to be a 1
			if (tab[i][j] != ' ' && tab[i][j] != '1') :
				if (tab[i - 1][j] == ' ' || ((i + 1 < nb_lignes) && tab[i + 1][j] == ' '))
					return (0);
			if (tab[i][j] == ' ' && (tab[i][j + 1] != '1' || tab[i][j - 1] != '1'))
				return (0);
			if (tab[i][j] == '1' && ((i + 1 < nb_lignes) && tab[i + 1][j] == ' '))
				if (tab[i][j - 1] != 1 && tab[i][j + 1] != 1)
					return (0);
			// check that the last one is a 1
			if (last != 1)
				return (0);
			j++;
	i++;

return (1);